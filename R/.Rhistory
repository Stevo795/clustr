hist(tmp_df[which(tmp_df$kmeans_res==k),"y"], breaks = 6,
main =as.character(paste(k, "th")), xlab = "quality",freq = F)
}
}
k=7
hist(tmp_df[which(tmp_df$y==k),"kmeans_res"], breaks = 6,
main =as.character(paste(k, "th")), xlab = "quality",freq = F)
hist(tmp_df[which(tmp_df$y==k),"kmeans_res"], breaks = 6,
main =as.character(paste(k, "th")), xlab = "quality",freq = F)
k=1
hist(tmp_df[which(tmp_df$y==k),"kmeans_res"], breaks = 6,
main =as.character(paste(k, "th")), xlab = "quality",freq = F)
#
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"], breaks = 6,
main =as.character(paste(k, "th")), xlab = "quality",freq = F)
#
k=2
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"], breaks = 6,
main =as.character(paste(k, "th")), xlab = "quality",freq = F)
k=1
hist(tmp_df[which(tmp_df$y==k),"kmeans_res"], breaks = 6,
main =as.character(paste(k, "th")), xlab = "quality",freq = F)
#
k=1
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"], breaks = 6,
main =as.character(paste(k, "th")), xlab = "quality",freq = F)
tmp_df[which(tmp_df$kmeans_res==k),"y"]
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")), xlab = "quality",freq = F) #breaks = 6,
#
k=1
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")), xlab = "quality",freq = F) #breaks = 6,
centers=7
y=wine$quality
x=wine[,1:11]
reverse=F
quality_kmeans <- kmeans(x = x , centers = centers, nstart = 25) #scale(data[,x_seq])
#fviz_cluster(quality_kmeans,  data = data[,x_seq], geom = "point")
# analysis on kmeans
hist(quality_kmeans$cluster)
# data$lab<-quality_kmeans$cluster
tmp_df=data.frame(y=y, kmeans_res=quality_kmeans$cluster)
par(mfrow=c(1,1))
if (centers<10){
par(mfrow=c(ifelse(centers<7, 2,3), 3))
}else{par(mfrow=c(ifelse(centers<13, 3,4), 4))}
if(reverse){
for (k in 1:centers){
hist(tmp_df[which(tmp_df$y==k),"kmeans_res"], breaks = 6,
main =as.character(paste(k, "th")), xlab = "quality",freq = F)
}
}else{
for (k in 1:centers){
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"], breaks = 6,
main =as.character(paste(k, "th")), xlab = "quality",freq = F)
}
}
#
k=1
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")), xlab = "quality",freq = F) #breaks = 6,
#
k=5
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")), xlab = "quality",freq = F) #breaks = 6,
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")), xlab = "quality",freq = F) #breaks = 6,
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")), xlab = "quality",freq = F) #breaks = 6,
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")), xlab = "quality",freq = F) #breaks = 6,
tmp_df[which(tmp_df$kmeans_res==k),"y"]
hist(c(7,7))
hist(rep(1,100))
hist(rep(1,100), breaks=10)
?hist
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")), xlab = "quality",freq = F) #breaks = 6,
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")),
xlab = "quality",freq = NULL,
probability = T) #breaks = 6,
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")),
xlab = "quality",freq = T,
xlim = c(3,8)) #breaks = 6,
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")),
xlab = "quality",freq = T,
xlim = c(3,8)) #breaks = 6,
#
k=3
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")),
xlab = "quality",freq = T,
xlim = c(3,8)) #breaks = 6,
#
k=4
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")),
xlab = "quality",freq = T,
xlim = c(3,8)) #breaks = 6,
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")),
xlab = "quality",freq = T
) #breaks = 6,
#
k=6
hist(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")),
xlab = "quality",freq = T
) #breaks = 6,
hist(as.factor(tmp_df[which(tmp_df$kmeans_res==k),"y"]),
main =as.character(paste(k, "th")),
xlab = "quality",freq = T
) #breaks = 6,
hist(c(1,2,3), xlim = c(1,3))
hist(c("1", "3", "5"),
.
)
hist(c("1", "3", "5"),
)
hist(c("1", "3", "5")
)
barplot(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")),
xlab = "quality",freq = T
)
barplot(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")),
xlab = "quality",freq = T
)
barplot(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")),
xlab = "quality"
)
warnings()
barplot(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")),
xlab = "quality")
barplot(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")),
xlab = "quality")
barplot(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")),
xlab = "quality")
barplot(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")),
xlab = "quality")
barplot(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")),
xlab = "quality", cex.main = 1)
barplot(tmp_df[which(tmp_df$kmeans_res==k),"y"],
main =as.character(paste(k, "th")),
xlab = "quality")
tmp_df[which(tmp_df$kmeans_res==k),"y"]
barplot(table(tmp_df[which(tmp_df$kmeans_res==k),"y"]),
main =as.character(paste(k, "th")),
xlab = "quality")
barplot(table(tmp_df[which(tmp_df$kmeans_res==k),"y"]),
main =as.character(paste(k, "th")),
xlab = "quality")
hist(table(tmp_df[which(tmp_df$kmeans_res==k),"y"]),
main =as.character(paste(k, "th")),
xlab = "quality",freq = T
) #breaks = 6,
table(tmp_df[which(tmp_df$kmeans_res==k),"y"])
text(x = bar_plot, y = tmp_df[which(tmp_df$kmeans_res==k),"y"], label = vec, pos = 3, cex = 1, col = "blue")
bar_plot = barplot(table(tmp_df[which(tmp_df$kmeans_res==k),"y"]),
main =as.character(paste(k, "th")),
xlab = "quality")
text(x = bar_plot, y = tmp_df[which(tmp_df$kmeans_res==k),"y"], label = vec, pos = 3, cex = 1, col = "blue")
text(x = bar_plot, y = tmp_df[which(tmp_df$kmeans_res==k),"y"], label = tmp_df[which(tmp_df$kmeans_res==k),"y"], pos = 3, cex = 1, col = "blue")
##
kmeans_hist<-function(centers,x,y, reverse=F){
quality_kmeans <- kmeans(x = x , centers = centers, nstart = 25) #scale(data[,x_seq])
#fviz_cluster(quality_kmeans,  data = data[,x_seq], geom = "point")
# analysis on kmeans
hist(quality_kmeans$cluster)
# data$lab<-quality_kmeans$cluster
tmp_df=data.frame(y=y, kmeans_res=quality_kmeans$cluster)
if (centers<10){
par(mfrow=c(ifelse(centers<7, 2,3), 3))
}else{par(mfrow=c(ifelse(centers<13, 3,4), 4))}
if(reverse){ # plot the hist of k value based on the value of y
for (k in 1:centers){
hist(tmp_df[which(tmp_df$y==k),"kmeans_res"], breaks = 6,
main =as.character(paste(k, "th")), xlab = "quality",freq = F)
}
}else{ # plot hist of y value based on value of k
for (k in 1:centers){
bar_plot = barplot(table(tmp_df[which(tmp_df$kmeans_res==k),"y"]),
main =as.character(paste(k, "th")),
xlab = "quality")
}
}
par(mfrow=c(1,1))
return(quality_kmeans$cluster)
}
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
?barplot
##
kmeans_hist<-function(centers,x,y, reverse=F){
quality_kmeans <- kmeans(x = x , centers = centers, nstart = 25) #scale(data[,x_seq])
#fviz_cluster(quality_kmeans,  data = data[,x_seq], geom = "point")
# analysis on kmeans
hist(quality_kmeans$cluster)
# data$lab<-quality_kmeans$cluster
tmp_df=data.frame(y=y, kmeans_res=quality_kmeans$cluster)
if (centers<10){
par(mfrow=c(ifelse(centers<7, 2,3), 3))
}else{par(mfrow=c(ifelse(centers<13, 3,4), 4))}
if(reverse){ # plot the hist of k value based on the value of y
for (k in 1:length(unique(y))){
bar_plot = barplot(table(tmp_df[which(tmp_df$y==k),"kmeans_res"]),
main =as.character(paste("y = ",k)),
xlab = "quality")
}
}else{ # plot hist of y value based on value of k
for (k in 1:centers){
bar_plot = barplot(table(tmp_df[which(tmp_df$kmeans_res==k),"y"]),
main =as.character(paste(k, "th")),
xlab = "quality")
}
}
par(mfrow=c(1,1))
return(quality_kmeans$cluster)
}
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11], reverse = T)
length(unique(y)
)
##
kmeans_hist<-function(centers,x,y, reverse=F){
quality_kmeans <- kmeans(x = x , centers = centers, nstart = 25) #scale(data[,x_seq])
#fviz_cluster(quality_kmeans,  data = data[,x_seq], geom = "point")
# analysis on kmeans
hist(quality_kmeans$cluster)
# data$lab<-quality_kmeans$cluster
tmp_df=data.frame(y=y, kmeans_res=quality_kmeans$cluster)
if (centers<10){
par(mfrow=c(ifelse(centers<7, 2,3), 3))
}else{par(mfrow=c(ifelse(centers<13, 3,4), 4))}
if(reverse){ # plot the hist of k value based on the value of y
for (k in 1:length(unique(y))){
barplot(table(tmp_df[which(tmp_df$y==k),"kmeans_res"]),
main =as.character(paste("y = ",k)),
xlab = "quality")
}
}else{ # plot hist of y value based on value of k
for (k in 1:centers){
barplot(table(tmp_df[which(tmp_df$kmeans_res==k),"y"]),
main =as.character(paste(k, "th")),
xlab = "quality")
}
}
par(mfrow=c(1,1))
return(quality_kmeans$cluster)
}
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11], reverse = T)
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11],, reverse = T)
table(tmp_df[which(tmp_df$y==k),"kmeans_res"])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11], reverse = T)
k=1
barplot(table(tmp_df[which(tmp_df$y==k),"kmeans_res"]),
main =as.character(paste("y = ",k)),
xlab = "quality")
table(tmp_df[which(tmp_df$y==k),"kmeans_res"])
table(tmp_df[which(tmp_df$y==k),"kmeans_res"])
tmp_df[which(tmp_df$y==k),"kmeans_res"]
k
##
kmeans_hist<-function(centers,x,y){
quality_kmeans <- kmeans(x = x , centers = centers, nstart = 25) #scale(data[,x_seq])
#fviz_cluster(quality_kmeans,  data = data[,x_seq], geom = "point")
# analysis on kmeans
hist(quality_kmeans$cluster)
# data$lab<-quality_kmeans$cluster
tmp_df=data.frame(y=y, kmeans_res=quality_kmeans$cluster)
if (centers<10){
par(mfrow=c(ifelse(centers<7, 2,3), 3))
}else{par(mfrow=c(ifelse(centers<13, 3,4), 4))}
for (k in 1:centers){
barplot(table(tmp_df[which(tmp_df$kmeans_res==k),"y"]),
main =as.character(paste(k, "th")),
xlab = "quality")
}
par(mfrow=c(1,1))
return(quality_kmeans$cluster)
}
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
##
kmeans_hist<-function(centers,x,y){
quality_kmeans <- kmeans(x = x , centers = centers, nstart = 25) #scale(data[,x_seq])
#fviz_cluster(quality_kmeans,  data = data[,x_seq], geom = "point")
# analysis on kmeans
hist(quality_kmeans$cluster)
# data$lab<-quality_kmeans$cluster
tmp_df=data.frame(y=y, kmeans_res=quality_kmeans$cluster)
if (centers<10){
par(mfrow=c(ifelse(centers<7, 2,3), 3))
}else{par(mfrow=c(ifelse(centers<13, 3,4), 4))}
for (k in 1:centers){
barplot(table(tmp_df[which(tmp_df$kmeans_res==k),"y"]),
main =as.character(paste(k, "th cluster")),
xlab = "quality")
}
par(mfrow=c(1,1))
return(quality_kmeans$cluster)
}
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11])
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11], nstart=25)
##
kmeans_hist<-function(centers,x,y){
quality_kmeans <- kmeans(x = x , centers = centers, nstart = nstart) #scale(data[,x_seq])
#fviz_cluster(quality_kmeans,  data = data[,x_seq], geom = "point")
# analysis on kmeans
hist(quality_kmeans$cluster)
# data$lab<-quality_kmeans$cluster
tmp_df=data.frame(y=y, kmeans_res=quality_kmeans$cluster)
if (centers<10){
par(mfrow=c(ifelse(centers<7, 2,3), 3))
}else{par(mfrow=c(ifelse(centers<13, 3,4), 4))}
for (k in 1:centers){
barplot(table(tmp_df[which(tmp_df$kmeans_res==k),"y"]),
main =as.character(paste(k, "th cluster")),
xlab = "quality")
}
par(mfrow=c(1,1))
return(quality_kmeans$cluster)
}
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11], nstart=25)
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11], nstart=25)
##
kmeans_hist<-function(centers,x,y){
quality_kmeans <- kmeans(x = x , centers = centers, nstart = nstart) #scale(data[,x_seq])
#fviz_cluster(quality_kmeans,  data = data[,x_seq], geom = "point")
# analysis on kmeans
hist(quality_kmeans$cluster)
# data$lab<-quality_kmeans$cluster
tmp_df=data.frame(y=y, kmeans_res=quality_kmeans$cluster)
if (centers<10){
par(mfrow=c(ifelse(centers<7, 2,3), 3))
}else{par(mfrow=c(ifelse(centers<13, 3,4), 4))}
for (k in 1:centers){
barplot(table(tmp_df[which(tmp_df$kmeans_res==k),"y"]),
main =as.character(paste(k, "th cluster")),
xlab = "quality")
}
par(mfrow=c(1,1))
return(quality_kmeans$cluster)
}
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11], nstart=25)
##
kmeans_hist<-function(centers,x,y, nstart){
quality_kmeans <- kmeans(x = x , centers = centers, nstart = nstart) #scale(data[,x_seq])
#fviz_cluster(quality_kmeans,  data = data[,x_seq], geom = "point")
# analysis on kmeans
hist(quality_kmeans$cluster)
# data$lab<-quality_kmeans$cluster
tmp_df=data.frame(y=y, kmeans_res=quality_kmeans$cluster)
if (centers<10){
par(mfrow=c(ifelse(centers<7, 2,3), 3))
}else{par(mfrow=c(ifelse(centers<13, 3,4), 4))}
for (k in 1:centers){
barplot(table(tmp_df[which(tmp_df$kmeans_res==k),"y"]),
main =as.character(paste(k, "th cluster")),
xlab = "quality")
}
par(mfrow=c(1,1))
return(quality_kmeans$cluster)
}
################
# test for r package clustr
################
Kmeans_dat=kmeans_hist(7,y=wine$quality, x=wine[,1:11], nstart=25)
setwd("D:/MyDesktop/R/clustr/R")
renv::snapshot()
?factoextra
?kmeans
?kmeans
devtools::document()
devtools::document()
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
getwd()
devtools::document()
devtools::document()
?plog
?plot
?hist
devtools::document()
?clust
?clustplot
?clustr
library(clustr)
devtools::document()
devtools::document()
